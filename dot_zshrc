# Personal Zsh configuration file. It is strongly recommended to keep all
# shell customization and configuration (including exported environment
# variables such as PATH) in this file or in files sourced from it.
#
# Documentation: https://github.com/romkatv/zsh4humans/blob/v5/README.md.

zstyle ':z4h:'                  auto-update            no
zstyle ':z4h:'                  auto-update-days       28
zstyle ':z4h:*'                 channel                testing
zstyle ':z4h:autosuggestions'   end-of-line            partial-accept
zstyle ':z4h:term-title:ssh'    precmd                 ${${${Z4H_SSH##*:}//\%/%%}:-%m}': %~'
zstyle ':z4h:term-title:ssh'    preexec                ${${${Z4H_SSH##*:}//\%/%%}:-%m}': ${1//\%/%%}'
zstyle ':z4h:command-not-found' to-file                "$TTY"
# Mark up shell's output with semantic information.
zstyle ':z4h:'                  term-shell-integration yes
zstyle ':z4h:'                  propagate-cwd          yes
zstyle ':z4h:'                  prompt-height          4

if [[ -e ~/.ssh/id_rsa ]]; then
  zstyle ':z4h:ssh-agent:' start      yes
  zstyle ':z4h:ssh-agent:' extra-args -t 20h
else
  : ${GITSTATUS_AUTO_INSTALL:=0}
fi

# Keyboard type: 'mac' or 'pc'.
zstyle ':z4h:bindkey' keyboard  'pc'

# Don't start tmux.
zstyle ':z4h:' start-tmux       no

# Right-arrow key accepts one character ('partial-accept') from
# command autosuggestions or the whole thing ('accept')?
# zstyle ':z4h:autosuggestions' forward-char 'accept'

# Recursively traverse directories when TAB-completing files.
zstyle ':z4h:fzf-complete'                   recurse-dirs 'yes'
zstyle ':z4h:fzf-complete'                   fzf-bindings       tab:repeat
zstyle ':z4h:fzf-dir-history'                fzf-bindings       tab:repeat


# Enable direnv to automatically source .envrc files.
zstyle ':z4h:direnv'         enable 'no'
# Show "loading" and "unloading" notifications from direnv.
zstyle ':z4h:direnv:success' notify 'yes'

# Enable ('yes') or disable ('no') automatic teleportation of z4h over
# SSH when connecting to these hosts.
zstyle ':z4h:ssh:*.cs.colorado.edu' enable 'yes'
zstyle ':z4h:ssh:*.colorado.edu'    enable 'yes'
# The default value if none of the overrides above match the hostname.
zstyle ':z4h:ssh:*.llnl.gov'        enable 'yes'
zstyle ':z4h:ssh:*'                 enable 'yes'

# Send these files over to the remote host when connecting over SSH to the
# enabled hosts.
# zstyle ':z4h:ssh:*' send-extra-files '~/.nanorc' '~/.env.zsh'

# Start ssh-agent if it's not running yet.
zstyle ':z4h:ssh-agent:' start yes

mkdir -p $HOME/.ssh/s

# Clone additional Git repositories from GitHub.
#
# This doesn't do anything apart from cloning the repository and keeping it
# up-to-date. Cloned files can be used after `z4h init`. This is just an
# example. If you don't plan to use Oh My Zsh, delete this line.
z4h install ohmyzsh/ohmyzsh || return

# Install or update core components (fzf, zsh-autosuggestions, etc.) and
# initialize Zsh. After this point console I/O is unavailable until Zsh
# is fully initialized. Everything that requires user interaction or can
# perform network I/O must be done above. Everything else is best done below.
export ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20
export ZSH_AUTOSUGGEST_MANUAL_REBIND=1
typeset -g USERNAME="${USERNAME:$USER}"

zstyle ':z4h:fzf-dir-history'                fzf-bindings       tab:repeat
zstyle ':z4h:fzf-complete'                   fzf-bindings       tab:repeat

z4h init || return

# Extend PATH.
[[ -f $HOME/.zpath.zsh ]] && z4h source $HOME/.zpath.zsh
path=(
  $cpath
  $path
)
typeset -gU path
export PATH

export MANPATH=/usr/local/texlive/2023/texmf-dist/doc/man:$MANPATH
export INFOPATH=/usr/local/texlive/2023/texmf-dist/doc/info:$INFOPATH

# Export environment variables.
export GPG_TTY=$TTY
export EDITOR=vim

# Source additional local files if they exist.
z4h source ~/.env.zsh

# Use additional Git repositories pulled in with `z4h install`.
#
# This is just an example that you should delete. It does nothing useful.
# z4h source ohmyzsh/ohmyzsh/lib/diagnostics.zsh  # source an individual file
# z4h load   ohmyzsh/ohmyzsh/plugins/emoji-clock  # load a plugin

# Define key bindings.
z4h bindkey z4h-backward-kill-word  Ctrl+Backspace     Ctrl+H
z4h bindkey z4h-backward-kill-zword Ctrl+Alt+Backspace

z4h bindkey undo Ctrl+/ Shift+Tab  # undo the last command line change
z4h bindkey redo Alt+/             # redo the last undone command line change

z4h bindkey z4h-cd-back    Alt+Left   # cd into the previous directory
z4h bindkey z4h-cd-forward Alt+Right  # cd into the next directory
z4h bindkey z4h-cd-up      Alt+Up     # cd into the parent directory
z4h bindkey z4h-cd-down    Alt+Down   # cd into a child directory

# Autoload functions.
autoload -Uz zmv

# Define functions and completions.
function md() { [[ $# == 1 ]] && mkdir -p -- "$1" && cd -- "$1" }
compdef _directories md

# git prune
git_prune_local() {
  git branch --v | grep "\[gone\]" | awk '{print $1}' | xargs git branch -D
}

# Define named directories: ~w <=> Windows home directory on WSL.
[[ -z $z4h_win_home ]] || hash -d w=$z4h_win_home

# Define aliases.
alias tree='tree -a -I .git'
alias gco='git checkout'
alias ducks='du -cksh -x --exclude "/mnt/*" * | sort -hr | head -n 15'
if command -v bat &> /dev/null
then
  alias cat='bat'
fi
# Add flags to existing aliases.
alias ls="${aliases[ls]:-ls} -A"

# Set shell options: http://zsh.sourceforge.net/Doc/Release/Options.html.
setopt glob_dots     # no special treatment for file names with a leading dot
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_SPACE
setopt HIST_FIND_NO_DUPS
setopt HIST_SAVE_NO_DUPS

# setopt no_auto_menu  # require an extra TAB press to open the completion menu

if hash zoxide 2>/dev/null; then
  eval "$(zoxide init --cmd cd zsh)"
fi
if [ -e /etc/profile.d/nix.sh ]; then
  source /etc/profile.d/nix.sh
fi
